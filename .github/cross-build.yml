name: Cross-Platform Builds

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
  # Trigger build automatically when a new tag (e.g., v1.0.0) is pushed
  push:
    tags:
      - 'v*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Install Linux Build Tools
        run: sudo apt update && sudo apt install -y gcc g++ cmake make

      - name: Configure and Build for Linux
        run: |
          cmake -B build-linux
          cmake --build build-linux --config Release

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-binaries
          path: build-linux/libiso8583.so

  build-freebsd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Install Clang for FreeBSD
        run: sudo apt install -y clang llvm

      - name: Configure and Build for FreeBSD
        run: |
          cmake -B build-freebsd
          cmake --build build-freebsd --config Release

      - name: Upload FreeBSD Artifact
        uses: actions/upload-artifact@v3
        with:
          name: freebsd-binaries
          path: build-freebsd/libiso8583.so

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Configure CMake for Windows
        run: cmake -B build-windows -G "Visual Studio 17 2022"

      - name: Build for Windows
        run: cmake --build build-windows --config Release

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-binaries
          path: build-windows/Release/iso8583.dll

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Install MacOS Build Tools
        run: brew install cmake

      - name: Configure and Build for MacOS
        run: |
          cmake -B build-macos
          cmake --build build-macos --config Release

      - name: Upload MacOS Artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-binaries
          path: build-macos/libiso8583.dylib
          if-no-files-found: error  # Add error handling

  release:
    needs: [build-linux, build-freebsd, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')  # Only run on version tags
    permissions:
      contents: write  # Add explicit permissions
    steps:
      - name: Download All Build Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts  # Specify download path

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Add token
        with:
          files: |
            artifacts/linux-binaries/libiso8583.so
            artifacts/freebsd-binaries/libiso8583.so
            artifacts/windows-binaries/iso8583.dll
            artifacts/macos-binaries/libiso8583.dylib
          draft: true  # Optional: create as draft first
          tag_name: ${{ github.ref }}
          name: "Release ${{ github.ref_name }}"  # Use ref_name for cleaner version
          fail_on_unmatched_files: true  # Add error handling
          body: |
            ## Release ${{ github.ref_name }}
            
            Automatically generated release binaries:
            - Linux (libiso8583.so)
            - FreeBSD (libiso8583.so)
            - Windows (iso8583.dll)
            - MacOS (libiso8583.dylib)
